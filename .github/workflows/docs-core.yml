name: docs / core

on:
  workflow_call:
    inputs:
      project:
        description: 'Project to run the command to.'
        type: string
        required: true

permissions:
  contents: write
  pages: write
  id-token: write

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-XX:MaxMetaspaceSize=4g"
  JDK_VERSION: 19

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: temurin

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: remove SNAPSHOT on gradle.properties version
        run: |
          cd kipher-core
          sed -i '/^VERSION=/ s/-SNAPSHOT//' gradle.properties

      - name: remove SNAPSHOT on root gradle.properties
        run: sed -i '/^VERSION=/ s/-SNAPSHOT//' gradle.properties

      - name: Get version from gradle.properties
        id: version_name
        shell: bash
        run: |
          cd kipher-core
          echo "version=$(grep '^VERSION=' gradle.properties | cut -d'=' -f2)" >> $GITHUB_OUTPUT

      - name: Dokka build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: kipher-core:dokkaHtml

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ./docs/api/kipher-core/${{ steps.version_name.outputs.version }}
          if-no-files-found: error

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

        # remove previous versions, new version contains the old ones
      - name: Remove current kipher-core docs
        run: rm -rf docs/api/kipher-core

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ./docs/api/kipher-core

      - name: Remove snapshots version
        run: |
          cd ./docs/api/kipher-core
          rm -rf **/older/*-SNAPSHOT

      - name: Commit latest docs
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -f docs/api/kipher-core
          git commit -m "docs(api): generate docs for kipher-core [skip-ci]"

      - name: Push to repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: ./docs/api/kipher-core

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ./docs/api

      - name: Get api docs output directory
        id: docs
        shell: bash
        run: |
          cd docs/api/
          echo "api=$(ls -d */ | head -n 1)" >> $GITHUB_OUTPUT

      - name: Publish to cloudflare pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: kipher-core
          directory: docs/api/${{ steps.docs.outputs.api }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
