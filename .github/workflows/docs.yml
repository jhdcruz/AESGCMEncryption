name: docs

on:
  workflow_dispatch:
  push:
    tags:
      - "**"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-XX:MaxMetaspaceSize=4g"
  JDK_VERSION: 19

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: temurin

      - name: Dokka build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dokkaHtmlMultiModule

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ./docs/api/
          if-no-files-found: error

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: tag_name
        shell: bash
        run: echo "current_version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

        # remove previous versions, new version contains the old ones
      - name: Remove previous versions
        run: rm -rf docs/api

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ./docs/api

      - name: Commit latest docs
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -f docs/api/
          git commit -m "docs: generate docs for ${{ steps.tag_name.outputs.current_version }} [skip-ci]"

      - name: Push to repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: ./docs/api

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Get version from tag
        id: tag_name
        shell: bash
        run: echo "current_version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ./docs/api

      - name: Upload to pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/api + ${{ steps.tag_name.outputs.current_version }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
